<?xml version="1.1" encoding="UTF-8"?>
<metadata name="modifyConstant" path="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/PublishedImpl/modifyConstant" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="inSequenceName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="inOrigUserName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="constantsPath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4096"/>
    </parameter>
    <parameter name="namePair" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="valuePair" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="errStatus" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="errMessage" direction="OUT" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/CommonTypes" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="OracleObjectTableExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleObjectIndexExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleCreateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleDropTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleIndexSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleCreateIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleCreateUniqueIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleDropIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleCreateSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleDropSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleGetSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleExecuteTableStats" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleSepBeg" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleSepEnd" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleObjectNameMaxLength" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleCachekeyName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleTruncateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleMergeSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="OracleMergeTableSql" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleMergeTableExample" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleAuditTableCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="OracleCachingDataCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerObjectTableExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerObjectIndexExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerCreateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerDropTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerIndexSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerCreateIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerCreateUniqueIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerDropIndex" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerCreateSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerDropSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerGetSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerExecuteTableStats" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerSepBeg" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerSepEnd" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerObjectNameMaxLength" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerCachekeyName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerTruncateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerMergeSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="SqlServerMergeTableSql" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerMergeTableExample" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerAuditTableCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="SqlServerCachingDataCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaObjectTableExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaObjectIndexExists" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaCreateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaDropTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaIndexSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaCreateSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaDropSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaGetSequence" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaExecuteTableStats" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaExecuteTableExpressStats" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaSepBeg" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaSepEnd" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaObjectNameMaxLength" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaCachekeyName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaTruncateTable" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaMergeSupported" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="NetezzaMergeTableSql" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaMergeTableExample" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaCachingDataCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="NetezzaAuditTableCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="AuditTableDropDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="AuditSeqTableCreateDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="AuditSeqTableDropDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CachingDataDropDDL" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CachingDataSelect" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CachingDataSelectDeployment" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CachingDataDelete" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CachingDataInsert" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CISSepBeg" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CISSepEnd" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="IU_CACHE_KEY" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="D_CACHE_KEY" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_FULL_SINGLE" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_FULL_MULTI" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_INCREMENTAL" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_HYBRID_DS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_HYBRID_DNS" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_MERGE_TYPE1" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_MERGE_TYPE2" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CACHE_TYPE_MERGE_TYPE4" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ValidCacheTypesAll" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ValidCacheTypesAllFull" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ValidCacheTypesAllHybrid" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ValidCacheTypesAllMerge" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="ValidCacheTypesAllIncremental" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="CacheStatusSelect" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="CacheStatusSelectByResPath" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="procedureGenerationPath" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="procedureTemplate" direction="OUT">
        <datatype type="STRING" maxLength="4096"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/DeleteDBSequence" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="sequenceName" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="sequenceNum" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="origUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="inPrefix" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="errStatus" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="errMessage" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetDBSequence" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inSequenceName" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="inSequenceNum" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="inOrigUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="inPrefix" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="sequenceNum" direction="OUT">
        <datatype type="INTEGER"/>
      </element>
      <element name="origUserName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="errStatus" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetDBSequenceByName" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inSequenceName" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="inSequenceNum" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="inOrigUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="inPrefix" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="sequenceNum" direction="OUT">
        <datatype type="INTEGER"/>
      </element>
      <element name="origUserName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="errStatus" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetUniqueSequenceName" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inSequenceName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="prefix" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="suffix" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="sequenceName" direction="OUT">
        <datatype type="STRING" maxLength="255"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFramework/Scripts/cfLog" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="sequenceNum" direction="IN">
        <datatype type="INTEGER"/>
      </element>
      <element name="origUserName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="debugLevel" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="debugLoggingTypeOverride" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="inModuleName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="resourceName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="cachekey" direction="IN">
        <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
      </element>
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="message" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstant" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="constantPath" direction="IN">
        <datatype referenceDefinitionSet="/shared/ASAssets/Utilities/TypeDefinitions" referenceType="pathType" type="STRING" maxLength="1000"/>
      </element>
      <element name="constantName" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="outValue" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/modifyConstant" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="constantsPath" direction="IN">
        <datatype type="STRING" maxLength="4096"/>
      </element>
      <element name="namePair" direction="IN">
        <datatype type="STRING" maxLength="255"/>
      </element>
      <element name="valuePair" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/system/customfunctions/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/system/customfunctions/getConstant" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1"></datatype>
  </dependency>
  <dependency target="/users/composite/admin/DoMultiStudents/emptyStr" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputString" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="outputString" direction="OUT">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">/*  modifyConstants:

	This script is used to modify a Constants procedure and change values at the time of deployment in order to enable automation.
	The Constants file is any SQL Script procedure that contains a format:
			SET varname = value;
	This script will search for &quot;SET varname&quot; in the script text in order to modify the value.  
	The value that is passed in is modified between the = and ; which means that any single quotes must be provided if the original value has them.
	For example a Constants procedure may have many variables set but we are only interested in setting one of the variables which will be uniquely defined
	within the context of the procedure.  Example:
			SET EnvironmentType					= &apos;DEV&apos;;
	In the above example the objective is to search for the namePair=EnvironmentType and replace the value with valuePair=&apos;UAT&apos;
	Notice that the value contains all necessary surrounding quotes.  The chart below shows how to escape values such as single and double quotes if necessary.

	The following values that are passed in may be escaped for the values passed in by the variable valuePair:
		Description		Value		Escaped Value
		quote 			(&quot;) 		&amp;quot; 
		apostrophe 		(&apos;) 		&amp;apos; 
		ampersand		(&amp;)			&amp;amp;
		less than 		(&lt;) 		&amp;lt; 
		greater than 	(&gt;) 		&amp;gt; 

	INPUT:
		nSequenceName	- The name of the sequence.  Leave null when called manually and a sequence will be generated otherwise it is passed in from the invoking procedure.
		inOrigUserName	- The original user@domain who started the process and transcends sessions.  If not set it will be retrieved from the environment.
		constantsPath 	- Path to the application constants procedure.
		namePair 		- The name of the name/value pair to modify
		valuePair 		- The value of the name/value pair to modify. Values are modified between the = and ;
						  Values must contain all single quotes around the data values if applicable.
	OUTPUT:
		errStatus		- Status=SUCCESS or FAIL
		errMessage		- Status message upon FAIL othwerwise NULL
	EXCEPTIONS:
		ex - throws an exception if anything goes wrong

	Modified Date:	Modified By:		CIS Version:	Reason:
	10/06/2014		Mike Tinius			6.2.6			Created new in order to support automated deployment. 
*/  
PROCEDURE modifyConstant(
	IN  inSequenceName			VARCHAR,		-- The name of the sequence.  Leave null when called manually and a sequence will be generated otherwise it is passed in from the invoking procedure.
	IN  inOrigUserName			VARCHAR(255),	-- The original user@domain who started the process and transcends sessions.  If not set it will be retrieved from the environment.
	IN  constantsPath	 		VARCHAR(4096),	-- Path to the application constants procedure.
	IN  namePair				VARCHAR,		-- The name of the name/value pair to modify
	IN  valuePair				LONGVARCHAR,	-- The value of the name/value pair to modify. Values are modified between the = and ;
	OUT errStatus 				VARCHAR,		-- Status=SUCCESS or FAIL
	OUT errMessage 				LONGVARCHAR		-- Status message upon FAIL othwerwise NULL
)
BEGIN
	DECLARE moduleName 						VARCHAR(255) 	DEFAULT &apos;PublishedImpl/modifyConstant&apos;;	-- name of SQL Script
	DECLARE prefix							VARCHAR 		DEFAULT &apos;MODIFY CONSTANT: &apos;; 			-- Used to prefix messages for the log so the messages are all uniform.
	DECLARE CommonTypesPath					VARCHAR(4096) 	DEFAULT /shared/ASAssets/CacheManagement/CacheFramework/Scripts/CommonTypes.CommonTypesPath;
	DECLARE DEBUG_LEVEL_INFO 				INTEGER		 	DEFAULT CAST(getConstant(constantsPath, &apos;DEBUG_LEVEL_INFO&apos;) AS INTEGER);
	DECLARE DEBUG_LEVEL_ERROR 				INTEGER		 	DEFAULT CAST(getConstant(constantsPath, &apos;DEBUG_LEVEL_ERROR&apos;) AS INTEGER);
	DECLARE DEBUG_LEVEL_DEBUG 				INTEGER		 	DEFAULT CAST(getConstant(constantsPath, &apos;DEBUG_LEVEL_DEBUG&apos;) AS INTEGER);
 	DECLARE organizationName 				VARCHAR(255)	DEFAULT getConstant(constantsPath, &apos;OrganizationName&apos;);
 	DECLARE applicationName 				VARCHAR(255)	DEFAULT getConstant(constantsPath, &apos;ApplicationName&apos;);
	DECLARE cachekey						INTEGER 		DEFAULT 0;
	DECLARE sequenceNum						BIGINT;
	DECLARE sequenceName					VARCHAR(4096);
	DECLARE origSequenceNum					BIGINT;
	DECLARE origUserName					VARCHAR;
	DECLARE seqMessage						LONGVARCHAR;

	-- Generate an audit log sequence# and set it in the AUDIT_LOG_SEQ table.
	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetUniqueSequenceName(inSequenceName, moduleName, &apos;SEQ&apos;, sequenceName);
	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetDBSequenceByName(sequenceName, 0, inOrigUserName, constantsPath, prefix, origSequenceNum, origUserName, errStatus);
	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/GetDBSequence(sequenceName, origSequenceNum, origUserName, constantsPath, prefix, sequenceNum, origUserName, errStatus);

	/*****************************************************************************************
	 * Modify a constants procedure variable
	 ****************************************************************************************/
	CALL /shared/ASAssets/Utilities/string/modifyConstant(constantsPath, namePair, valuePair);

	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/cfLog(sequenceNum, origUserName, DEBUG_LEVEL_INFO, null, moduleName, NULL, cachekey,  constantsPath, 
			prefix||&apos;Successfully modified &apos;||emptyStr(namePair) ||&apos;=[&apos;||emptyStr(valuePair)||&apos;] in the Constants procedure path=&apos;||constantsPath);

	-- Remove the sequence from the audit log sequence table if it was generated within this procedure
	IF (origSequenceNum IS NULL OR origSequenceNum = 0) THEN
		CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/DeleteDBSequence(sequenceName, sequenceNum, origUserName, constantsPath, prefix, errStatus, errMessage);
		IF (errStatus = &apos;FAIL&apos;) THEN
			RAISE /shared/ASAssets/CacheManagement/CacheFramework/Scripts/CommonTypes.exErrorReturned VALUE errMessage;
		END IF;
	END IF;
	SET errStatus = &apos;SUCCESS&apos;;
	SET errMessage = NULL;

EXCEPTION
    WHEN /shared/ASAssets/CacheManagement/CacheFramework/Scripts/CommonTypes.exResourceNotFound THEN
		SET errMessage = CURRENT_EXCEPTION.MESSAGE;
    	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/cfLog(sequenceNum, origUserName, DEBUG_LEVEL_ERROR, null, moduleName, null, cachekey,  constantsPath, errMessage);
		-- Remove the sequence from the audit log sequence table if it was generated within this procedure
		IF (origSequenceNum IS NULL OR origSequenceNum = 0) THEN
			CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/DeleteDBSequence(sequenceName, sequenceNum, origUserName, constantsPath, prefix, errStatus, seqMessage);
		END IF;
        SET errStatus = &apos;FAIL&apos;;
 	WHEN /shared/ASAssets/CacheManagement/CacheFramework/Scripts/CommonTypes.exErrorReturned THEN
    	SET errMessage = CURRENT_EXCEPTION.MESSAGE;
    	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/cfLog(sequenceNum, origUserName, DEBUG_LEVEL_ERROR, null, moduleName, null, cachekey,  constantsPath, errMessage);
		-- Remove the sequence from the audit log sequence table if it was generated within this procedure
		IF (origSequenceNum IS NULL OR origSequenceNum = 0) THEN
			CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/DeleteDBSequence(sequenceName, sequenceNum, origUserName, constantsPath, prefix, errStatus, seqMessage);
		END IF;
        SET errStatus = &apos;FAIL&apos;;
    ELSE
    	SET errMessage = CURRENT_EXCEPTION.TRACE;
    	CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/cfLog(sequenceNum, origUserName, DEBUG_LEVEL_ERROR, null, moduleName, null, cachekey,  constantsPath, errMessage);
		-- Remove the sequence from the audit log sequence table if it was generated within this procedure
		IF (origSequenceNum IS NULL OR origSequenceNum = 0) THEN
			CALL /shared/ASAssets/CacheManagement/CacheFramework/Scripts/HelperScripts/DeleteDBSequence(sequenceName, sequenceNum, origUserName, constantsPath, prefix, errStatus, seqMessage);
		END IF;
        SET errStatus = &apos;FAIL&apos;;
END</attribute>
  <attribute name="creationDate" type="LONG">1387221618621</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1415054676443</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="NULL"/>
</metadata>