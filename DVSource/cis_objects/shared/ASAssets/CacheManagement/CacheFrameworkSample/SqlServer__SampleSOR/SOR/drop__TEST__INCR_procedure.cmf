<?xml version="1.1" encoding="UTF-8"?>
<metadata name="drop_TEST_INCR" path="/shared/ASAssets/CacheManagement/CacheFrameworkSample/SqlServer_SampleSOR/SOR/drop_TEST_INCR" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="catalogName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="schemaName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="cursCombinedResult" direction="OUT" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="1024"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/lib/debug/Print" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="textToPrint" direction="IN">
        <datatype referenceDefinitionSet="/lib/util/System" referenceType="MessageValue" type="STRING" maxLength="64000"/>
      </element>
    </datatype>
  </dependency>
  <dependency target="/shared/ASAssets/CacheManagement/CacheFrameworkSample/SqlServer_SampleSOR/SOR/ExecuteDDL" type="PROCEDURE">
    <datatype type="PROCEDURE" refId="1">
      <element name="inputSQL" direction="IN">
        <datatype type="STRING" maxLength="2147483647"/>
      </element>
      <element name="result" direction="OUT">
        <datatype type="TABLE" refId="2">
          <element name="outputValue">
            <datatype type="INTEGER" minValue="-2147483648" maxValue="2147483647"/>
          </element>
        </datatype>
      </element>
    </datatype>
  </dependency>
  <attribute name="Script" type="STRING">PROCEDURE drop_TEST_INCR(
	IN  catalogName				VARCHAR,
	IN  schemaName				VARCHAR,
	OUT cursCombinedResult		VARCHAR(1024) -- 1=success, -1=failure
)
BEGIN
	DECLARE sqlStatement		VARCHAR(4096);
	DECLARE cursType			VARCHAR;
	DECLARE i					INTEGER;
	DECLARE ex					EXCEPTION;
	DECLARE curs				CURSOR (result INTEGER);
	DECLARE cursResult			INTEGER;
	DECLARE status				VARCHAR(4);
	DECLARE TYPE sqlRowType		ROW(cursType VARCHAR, sqlStatement LONGVARCHAR);
	DECLARE sqlRow				sqlRowType;
	DECLARE sqlVect				VECTOR(sqlRowType);

	IF (catalogName IS NULL or LENGTH(catalogName) = 0) THEN
		RAISE ex VALUE &apos;The catalogName variable cannot be null or empty.&apos;;
	END IF;
	IF (schemaName IS NULL or LENGTH(schemaName) = 0) THEN
		RAISE ex VALUE &apos;The schemaName variable cannot be null or empty.&apos;;
	END IF;

	SET sqlVect = VECTOR[
		 (&apos;cursSequence&apos;, 		REPLACE(REPLACE(&apos;DROP SEQUENCE {1}.TEST_INCR_SEQ&apos;, 			&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
		,(&apos;cursDelTrigger&apos;, 	REPLACE(REPLACE(&apos;DROP TRIGGER {1}.TEST_INCR_DEL_TRIGGER&apos;, 	&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
		,(&apos;cursHistTrigger&apos;, 	REPLACE(REPLACE(&apos;DROP TRIGGER {1}.TEST_INCR_TRIGGER&apos;, 		&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
		,(&apos;cursTable&apos;, 			REPLACE(REPLACE(&apos;DROP TABLE {0}.{1}.TEST_INCR&apos;, 			&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
		,(&apos;cursDelTable&apos;, 		REPLACE(REPLACE(&apos;DROP TABLE {0}.{1}.TEST_INCR_DEL&apos;,			&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
		,(&apos;cursHistTable&apos;, 		REPLACE(REPLACE(&apos;DROP TABLE {0}.{1}.TEST_INCR_HIST&apos;, 		&apos;{0}&apos;, catalogName), &apos;{1}&apos;, schemaName))
	];

	SET i = 1;
	WHILE (i &lt;= CARDINALITY(sqlVect)) DO
		SET sqlRow = sqlVect[i];

		BEGIN INDEPENDENT TRANSACTION
			CALL PRINT(i||&apos;:-----------------------------------------------------------------------------------------------&apos;);
			CALL PRINT(sqlRow.sqlStatement);
			OPEN curs FOR SELECT * FROM /shared/ASAssets/CacheManagement/CacheFrameworkSample/SqlServer_SampleSOR/SOR/ExecuteDDL(sqlRow.sqlStatement);
			FETCH curs INTO cursResult;
			CLOSE curs;
			SET status = &apos;PASS&apos;;
		EXCEPTION
			ELSE
				CALL PRINT(sqlRow.cursType||&apos; EXCEPTION=&apos;||CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR));
				SET cursResult = -1;
				SET status = &apos;FAIL&apos;;
		END;
		IF (cursCombinedResult IS NULL) THEN
			SET cursCombinedResult = &apos;&apos;;
		ELSE
			SET cursCombinedResult = cursCombinedResult || &apos;,  &apos;;
		END IF;
		SET cursCombinedResult = cursCombinedResult || sqlRow.cursType||&apos;=&apos;||status;
		CALL PRINT(&apos;&apos;);
		SET i = i + 1;
	END WHILE;
END</attribute>
  <attribute name="creationDate" type="LONG">1410976495807</attribute>
  <attribute name="creatorUserDomain" type="STRING">ldap</attribute>
  <attribute name="creatorUserName" type="STRING">zkxl6un</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">0</attribute>
  <attribute name="impactMessage" type="NULL"/>
  <attribute name="lastModifiedDate" type="LONG">1415111280153</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="references" type="MAP">
    <item>
      <key type="STRING">9/40</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">8/57</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">10/47</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
    <item>
      <key type="STRING">9/39</key>
      <value type="STRING_ARRAY">
        <item>lib</item>
        <item>debug</item>
        <item>Print</item>
      </value>
    </item>
  </attribute>
</metadata>